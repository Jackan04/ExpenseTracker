@using ExpenseTracker.Models
@using ExpenseTracker.Services

<div class="nav-header">
    <h2><a class="app-title" href="">Expense Tracker</a></h2>

    <button
        title="Navigation menu"
        class="menu-toggle"
        @onclick="ToggleNavMenu"
        aria-expanded="@(!collapseNavMenu).ToString().ToLower()"
        aria-controls="main-nav"
    >
        <img src="icons/hamburger.svg" alt="Menu" class="icon" />
    </button>
</div>

<div id="main-nav" class="nav-container @NavMenuCssClass">
    <nav class="nav-list">
        <div class="nav-buttons">
            <div class="add-btn button">
                <a href="addExpense">
                    <img src="icons/plus.svg" alt="Add" class="icon icon-add" /> 
                    Expense
                </a>
            </div>

            <div class="add-btn button">
                <a href="addCategory">
                    <img src="icons/plus.svg" alt="Add" class="icon icon-add" /> 
                    Category
                </a>
            </div>
        </div>
        <div>
        <a href="" class="nav-item">
            <img src="icons/bill.svg" alt="Bill" class="icon"/> All Expenses
        </a>


        </div>

        <div class="navbar-categories">
            <h3 class="nav-section-heading">Categories</h3>
            @foreach (var category in categories)
            {
                <a class="nav-item" href="@($"/category/{category.Name}")">
                    @category.Name Expenses
                </a>
            }
        </div>
    </nav>
</div>

@code {
    // true = collapsed/hidden on small screens
    private bool collapseNavMenu = true;
    
    private string NavMenuCssClass => collapseNavMenu ? "collapsed" : "expanded";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private List<Category> categories = new();
    [Inject] private FirebaseCategoryService FirebaseCategory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await FirebaseCategory.GetCategoriesAsync();
    }
}